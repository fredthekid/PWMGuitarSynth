const float pi = 3.141592;
unsigned int El[500];    
unsigned int A[500];    
unsigned int D[500];    
unsigned int G[500];
unsigned int B[500];    
unsigned int Eh[500];    

ISR(TIMER0_COMPA_vect){ // timer0 compare interrupt service routine
  static int counter = 0;
  counter = (counter>=499)?0:(counter+1);
  
  OCR1A = Eh[counter];
  TCNT0 = 0;
  //if (counter == 0) delay(500);
}

void setup(void){
  calcSine();
  pinMode(3,OUTPUT);
  pinMode(5,OUTPUT);
  pinMode(6,OUTPUT);
  pinMode(9,OUTPUT);
  pinMode(10,OUTPUT); 
  pinMode(11,OUTPUT); 
  
  noInterrupts();         // disable all interrupts
  TCCR0A  = 0;            // initialize timer0A register
  TCCR0B  = 0;            // initialize timer0B register
  TCNT0   = 0;            // initilaize timer0 counter
  OCR0A   = 254;           // set timer0 output compare register
  TCCR0A  = 0b10000010;            // set timer0A register
  TCCR0B  = 0b00000100;   // set timer0B register; prescale = 1024; (20*10^6)/1024*200 = 3906250 cycles/sec
  TIMSK0  = 0b00000010;   // set timer0 interrupt mask register; output compare A enabled
  interrupts();           // enable all interrupts
  
  TCCR1A  = 0b10000010;
  TCCR1B  = 0b00011011;
  ICR1 = 1500;
}

void loop(void){
}

void calcSine() {
//  for (int n = 0; n <500; n++) {
//    El[n] = (378) * sin(pi * n / 250) + (378+1);
//  }
//  for (int n = 0; n <500; n++) {
//    A[n] = (300) * sin(pi * n / 250) + (300+1);
//  }
//  for (int n = 0; n <500; n++) {
//    D[n] = (212) * sin(pi * n / 250) + (212+1);
//  }
//  for (int n = 0; n <500; n++) {
//    G[n] = (158) * sin(pi * n / 250) + (158+1);
//  }
//  for (int n = 0; n <500; n++) {
//    B[n] = (125) * sin(pi * n / 250) + (125+1);
//  }
  for (int n = 0; n <500; n++) {
    Eh[n] = (94) * sin(pi * n / 500) + (94+1);
  }  
} 
